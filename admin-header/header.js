document.addEventListener('DOMContentLoaded', function() {
    const navLinks = document.querySelectorAll('.custom-navbar .nav-link');
    const contentArea = document.getElementById('content-area');

    // Function to handle tab clicks
    function handleTabClick(event) {
        // Prevent default link behavior for nav links (not for icon links)
        if (!event.currentTarget.classList.contains('icon-link')) {
            event.preventDefault();
        }

        // Remove 'active' class from all main nav links
        navLinks.forEach(link => {
            // Only remove 'active' from navigation tabs, not icons
            if (!link.classList.contains('icon-link')) {
                link.classList.remove('active');
            }
        });

        // Add 'active' class to the clicked link, if it's a main nav link
        if (!event.currentTarget.classList.contains('icon-link')) {
            event.currentTarget.classList.add('active');
        }

        // Get the data-tab attribute to determine which content to load
        const tab = event.currentTarget.getAttribute('data-tab');

        // Dynamically load content based on the tab clicked
        let filePath = ''; // To store the path to the PHP file

        switch (tab) {
            case 'home':
                filePath = '../HTML/admin_homepage.html'; // Path to your home PHP file
                break;
            case 'violations':
                filePath = '../updated-admin-violation/admin_violation_page.php'; // Path to your violations PHP file
                break;
            case 'student-sanction':
                filePath = '../updated-admin-sanction/admin_sanction.php'; // Path to your student sanction PHP file
                break;
            case 'user-management':
                filePath = '../user-management/user_management.php'; // Path to your user management PHP file
                break;
            default:
                if (tab) {
                    contentArea.innerHTML = '<p>Content for this tab is not yet available.</p>';
                }
                return;
        }

        // If a filePath is determined, fetch the content
        if (filePath) {
            fetch(filePath)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return response.text(); // Get the response as plain text (HTML generated by PHP)
                })
                .then(htmlContent => {
                    contentArea.innerHTML = htmlContent; // Insert the fetched HTML into the content area
                })
                .catch(error => {
                    console.error('Error loading tab content:', error);
                    contentArea.innerHTML = `<p>Error loading content: ${error.message}</p>`;
                });
        }
    }

    // Add click event listener to each nav link
    navLinks.forEach(link => {
        link.addEventListener('click', handleTabClick);
    });

    // Optionally, set the initial active tab and load its content
    const initialActiveLink = document.querySelector('.custom-navbar .nav-link.active:not(.icon-link)');
    if (initialActiveLink) {
        initialActiveLink.click();
    }
});